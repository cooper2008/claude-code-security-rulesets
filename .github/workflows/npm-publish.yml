name: NPM Publish

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v1.0.1, etc.

jobs:
  publish:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write  # Required for npm provenance
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for changelog generation

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Verify build output
        run: |
          echo "Checking dist directory..."
          ls -la dist/
          echo "Checking CLI executable..."
          chmod +x dist/cli/index.js
          node dist/cli/index.js --version

      - name: Debug NPM configuration
        run: |
          echo "🔍 NPM Configuration Debug:"
          echo "NPM version: $(npm --version)"
          echo "Node version: $(node --version)"
          echo "NPM registry: $(npm config get registry)"
          echo "NPM userconfig: $(npm config get userconfig)"
          echo "Environment variables:"
          env | grep -E "(NPM|NODE)" | sort
          echo "📋 Current .npmrc locations:"
          find /home/runner -name ".npmrc" 2>/dev/null || true
          echo "✅ Setup complete"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Verify npm authentication
        run: |
          echo "🧪 Testing NPM authentication..."
          if npm whoami; then
            echo "✅ NPM authentication successful"
            USER=$(npm whoami)
            echo "📝 Logged in as: $USER"
          else
            echo "❌ NPM authentication failed"
            echo "🔍 Debugging information:"
            echo "Registry: $(npm config get registry)"
            echo "Auth token configured: $([ -n \"$NODE_AUTH_TOKEN\" ] && echo 'Yes' || echo 'No')"
            exit 1
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NPM (dry run)
        run: |
          echo "🧪 Running dry-run publish..."
          npm publish --dry-run
          echo "✅ Dry run successful"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NPM (stable)
        if: "!contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc')"
        run: |
          echo "🚀 Publishing to NPM..."
          npm publish --provenance
          echo "✅ Package published successfully!"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: |
            🛡️ **Claude Code Security Rulesets Generator v${{ steps.version.outputs.version }}**
            
            ## 🚀 Installation
            
            ```bash
            npm install -g claude-code-security-rulesets
            ```
          draft: false
          prerelease: false

      - name: Verify NPM publication
        run: |
          echo "🔍 Verifying package was published..."
          sleep 10  # Wait for NPM to propagate
          if npm view claude-code-security-rulesets@${{ steps.version.outputs.version }}; then
            echo "✅ Package successfully published and available!"
            echo "📦 Install with: npm install -g claude-code-security-rulesets"
          else
            echo "❌ Package not found after publication"
            exit 1
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
