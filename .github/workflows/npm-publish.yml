name: NPM Publish

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v1.0.1, etc.

jobs:
  publish:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write  # Required for npm provenance
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for changelog generation

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Verify build output
        run: |
          echo "Checking dist directory..."
          ls -la dist/
          echo "Checking CLI executable..."
          chmod +x dist/cli/index.js
          node dist/cli/index.js --version

      - name: Debug NPM token
        run: |
          if [ -z "$NPM_TOKEN" ]; then
            echo "❌ NPM_TOKEN is empty"
            exit 1
          else
            echo "✅ NPM_TOKEN is set (length: ${#NPM_TOKEN})"
            echo "✅ Token starts with: ${NPM_TOKEN:0:10}..."
          fi
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Setup .npmrc for authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
          echo "registry=https://registry.npmjs.org/" >> ~/.npmrc
          echo "always-auth=true" >> ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Verify npm authentication
        run: npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NPM (stable)
        if: "!contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc')"
        run: npm publish --provenance

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: |
            🛡️ **Claude Code Security Rulesets Generator v${{ steps.version.outputs.version }}**
            
            ## 🚀 Installation
            
            ```bash
            npm install -g claude-code-security-rulesets
            ```
          draft: false
          prerelease: false
